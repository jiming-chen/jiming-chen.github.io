<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CS 4110: Programming Languages and Logics on Jiming Chen</title>
    <link>https://jiming-chen.github.io/courses/cs4110/</link>
    <description>Recent content in CS 4110: Programming Languages and Logics on Jiming Chen</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Aug 2025 10:08:42 -0400</lastBuildDate>
    <atom:link href="https://jiming-chen.github.io/courses/cs4110/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lecture 1: Course Overview</title>
      <link>https://jiming-chen.github.io/courses/cs4110/lecture01/</link>
      <pubDate>Mon, 25 Aug 2025 10:08:42 -0400</pubDate>
      <guid>https://jiming-chen.github.io/courses/cs4110/lecture01/</guid>
      <description>&lt;p&gt;This lecture serves as theater, e.g. to show why studying programming languages might be cool.&lt;/p&gt;
&lt;h2 id=&#34;programming-language-quirk-examples&#34;&gt;Programming Language Quirk Examples&lt;/h2&gt;
&lt;p&gt;One cool example of programming languages being weird is how &lt;code&gt;[] + []&lt;/code&gt;, &lt;code&gt;[] + {}&lt;/code&gt;, &lt;code&gt;{} + []&lt;/code&gt;, and &lt;code&gt;{} + {}&lt;/code&gt; all evaluate to different things in JavaScript.&lt;/p&gt;
&lt;p&gt;If we run &lt;code&gt;a = [1], 2&lt;/code&gt; and then &lt;code&gt;a[0] += [3]&lt;/code&gt;, you might think we would have &lt;code&gt;a = [1, 3], 2&lt;/code&gt;, but in Python, tuples are not mutable, so we get an error. However, after the error, &lt;code&gt;a&lt;/code&gt; still evaluates as &lt;code&gt;([1, 3], 2)&lt;/code&gt;. Why does this happen? At the source level, it might look like if the &lt;code&gt;+=&lt;/code&gt; line threw an error, then its side effects wouldn&amp;rsquo;t happen. But, if we look at the bytecode representation (by using the &lt;code&gt;dis&lt;/code&gt; module), we see that is actually not the case.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
